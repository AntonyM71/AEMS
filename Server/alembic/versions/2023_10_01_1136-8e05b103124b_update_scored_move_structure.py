"""Update scored move structure

Revision ID: 8e05b103124b
Revises: 7b1ff74a8fb0
Create Date: 2023-10-01 11:36:13.125502

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "8e05b103124b"
down_revision = "7b1ff74a8fb0"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("scoredMoves_run_id_fkey", "scoredMoves", type_="foreignkey")
    op.drop_table("run")
    op.alter_column(
        "competition",
        "id",
        existing_type=postgresql.UUID(),
        comment=None,
        existing_comment="Competition ID",
        existing_nullable=False,
    )
    op.alter_column(
        "scoredBonuses",
        "id",
        existing_type=postgresql.UUID(),
        comment=None,
        existing_comment="Competition ID",
        existing_nullable=False,
    )
    op.add_column(
        "scoredMoves",
        sa.Column("heat_id", postgresql.UUID(as_uuid=True), nullable=True),
    )
    op.add_column("scoredMoves", sa.Column("run_number", sa.String(), nullable=False))
    op.add_column(
        "scoredMoves",
        sa.Column("athlete_id", postgresql.UUID(as_uuid=True), nullable=False),
    )
    op.add_column("scoredMoves", sa.Column("direction", sa.String(), nullable=False))
    op.alter_column(
        "scoredMoves",
        "id",
        existing_type=postgresql.UUID(),
        comment=None,
        existing_comment="Competition ID",
        existing_nullable=False,
    )

    op.create_foreign_key(None, "scoredMoves", "heat", ["heat_id"], ["id"])
    op.create_foreign_key(None, "scoredMoves", "athlete", ["athlete_id"], ["id"])
    op.drop_column("scoredMoves", "run_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "scoredMoves",
        sa.Column("run_id", postgresql.UUID(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "scoredMoves", type_="foreignkey")
    op.drop_constraint(None, "scoredMoves", type_="foreignkey")
    op.create_foreign_key(
        "scoredMoves_run_id_fkey", "scoredMoves", "run", ["run_id"], ["id"]
    )
    op.alter_column(
        "scoredMoves",
        "id",
        existing_type=postgresql.UUID(),
        comment="Competition ID",
        existing_nullable=False,
    )
    op.drop_column("scoredMoves", "direction")
    op.drop_column("scoredMoves", "athlete_id")
    op.drop_column("scoredMoves", "run_number")
    op.drop_column("scoredMoves", "heat_id")
    op.alter_column(
        "scoredBonuses",
        "id",
        existing_type=postgresql.UUID(),
        comment="Competition ID",
        existing_nullable=False,
    )
    op.alter_column(
        "competition",
        "id",
        existing_type=postgresql.UUID(),
        comment="Competition ID",
        existing_nullable=False,
    )
    op.create_table(
        "run",
        sa.Column("id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column("heat_id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["heat_id"], ["heat.id"], name="run_heat_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="run_pkey"),
    )
    # ### end Alembic commands ###
