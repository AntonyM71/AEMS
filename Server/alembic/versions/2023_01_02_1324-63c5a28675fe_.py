"""empty message

Revision ID: 63c5a28675fe
Revises: 
Create Date: 2023-01-02 13:24:51.565549

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '63c5a28675fe'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Athlete',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Competition',
    sa.Column('id', postgresql.UUID(), nullable=False, comment='Competition ID'),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ScoreSheet',
    sa.Column('id', postgresql.UUID(), nullable=False, comment='Competition ID'),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('AvailableMoves',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('sheet_id', postgresql.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sheet_id'], ['ScoreSheet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Event',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('competition_id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['competition_id'], ['Competition.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('AvailableBonuses',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('sheet_id', postgresql.UUID(), nullable=True),
    sa.Column('move_id', postgresql.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['move_id'], ['AvailableMoves.id'], ),
    sa.ForeignKeyConstraint(['sheet_id'], ['ScoreSheet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Phase',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('event_id', postgresql.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('number_of_runs', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['Event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Heat',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('phase_id', postgresql.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['phase_id'], ['Phase.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Run',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('heat_id', postgresql.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('paddler_ids', postgresql.ARRAY(postgresql.UUID()), nullable=True),
    sa.ForeignKeyConstraint(['heat_id'], ['Heat.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ScoredMoves',
    sa.Column('id', postgresql.UUID(), nullable=False, comment='Competition ID'),
    sa.Column('move_id', postgresql.UUID(), nullable=True),
    sa.Column('run_id', postgresql.UUID(), nullable=True),
    sa.Column('judge_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['move_id'], ['AvailableMoves.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['Run.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ScoredBonuses',
    sa.Column('id', postgresql.UUID(), nullable=False, comment='Competition ID'),
    sa.Column('bonus_id', postgresql.UUID(), nullable=True),
    sa.Column('move_id', postgresql.UUID(), nullable=True),
    sa.Column('judge_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['bonus_id'], ['AvailableBonuses.id'], ),
    sa.ForeignKeyConstraint(['move_id'], ['ScoredMoves.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ScoredBonuses')
    op.drop_table('ScoredMoves')
    op.drop_table('Run')
    op.drop_table('Heat')
    op.drop_table('Phase')
    op.drop_table('AvailableBonuses')
    op.drop_table('Event')
    op.drop_table('AvailableMoves')
    op.drop_table('ScoreSheet')
    op.drop_table('Competition')
    op.drop_table('Athlete')
    # ### end Alembic commands ###
