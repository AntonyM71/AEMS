"""add nonn nullable constraints

Revision ID: d4bc03bc20d2
Revises: 23ba83f5dec4
Create Date: 2023-03-12 11:11:31.689373

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "d4bc03bc20d2"
down_revision = "23ba83f5dec4"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("athlete", "first_name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("athlete", "last_name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("athlete", "bib", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "athleteheat", "scoresheet", existing_type=postgresql.UUID(), nullable=False
    )
    op.alter_column(
        "availableBonuses", "name", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "availableBonuses", "score", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "availableMoves", "sheet_id", existing_type=postgresql.UUID(), nullable=False
    )
    op.alter_column(
        "availableMoves", "name", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "availableMoves", "fl_score", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "availableMoves", "rb_score", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "availableMoves", "direction", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column("competition", "name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("event", "name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("heat", "name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("phase", "name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "phase", "number_of_runs", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column("run", "name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("scoreSheet", "name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "scoredBonuses", "bonus_id", existing_type=postgresql.UUID(), nullable=False
    )
    op.alter_column(
        "scoredBonuses", "move_id", existing_type=postgresql.UUID(), nullable=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "scoredBonuses", "move_id", existing_type=postgresql.UUID(), nullable=True
    )
    op.alter_column(
        "scoredBonuses", "bonus_id", existing_type=postgresql.UUID(), nullable=True
    )
    op.alter_column("scoreSheet", "name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("run", "name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "phase", "number_of_runs", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column("phase", "name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("heat", "name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("event", "name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("competition", "name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "availableMoves", "direction", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "availableMoves", "rb_score", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "availableMoves", "fl_score", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column("availableMoves", "name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "availableMoves", "sheet_id", existing_type=postgresql.UUID(), nullable=True
    )
    op.alter_column(
        "availableBonuses", "score", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "availableBonuses", "name", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "athleteheat", "scoresheet", existing_type=postgresql.UUID(), nullable=True
    )
    op.alter_column("athlete", "bib", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("athlete", "last_name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("athlete", "first_name", existing_type=sa.VARCHAR(), nullable=True)
    # ### end Alembic commands ###
