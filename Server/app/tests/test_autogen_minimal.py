"""Minimal tests for autogenerated endpoints."""

from app.autogenEndpoints import (
    crud_route_athlete,
    crud_route_competition,
    crud_route_event,
    crud_route_heat,
    crud_route_phase,
    crud_route_scoresheet,
)


def test_endpoints_exist():
    """Simply test that endpoints exist and have expected configuration."""
    # Test competition endpoint
    assert crud_route_competition.prefix == "/competition"
    assert "competition" in crud_route_competition.tags

    # Test event endpoint
    assert crud_route_event.prefix == "/event"
    assert "event" in crud_route_event.tags

    # Test phase endpoint
    assert crud_route_phase.prefix == "/phase"
    assert "phase" in crud_route_phase.tags

    # Test heat endpoint
    assert crud_route_heat.prefix == "/heat"
    assert "heat" in crud_route_heat.tags

    # Test athlete endpoint
    assert crud_route_athlete.prefix == "/athlete"
    assert "athlete" in crud_route_athlete.tags

    # Test scoresheet endpoint
    assert crud_route_scoresheet.prefix == "/scoresheet"
    assert "scoresheet" in crud_route_scoresheet.tags


def test_routes_defined():
    """Test that each endpoint has routes defined."""
    # Check competition routes
    assert crud_route_competition.routes
    has_get = False
    for route in crud_route_competition.routes:
        if "GET" in route.methods:
            has_get = True
            break
    assert has_get, "Competition endpoint does not have a GET method"

    # Check event routes
    assert crud_route_event.routes
    has_get = False
    for route in crud_route_event.routes:
        if "GET" in route.methods:
            has_get = True
            break
    assert has_get, "Event endpoint does not have a GET method"

    # Check phase routes
    assert crud_route_phase.routes
    has_get = False
    for route in crud_route_phase.routes:
        if "GET" in route.methods:
            has_get = True
            break
    assert has_get, "Phase endpoint does not have a GET method"
